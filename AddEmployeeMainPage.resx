<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="profile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>